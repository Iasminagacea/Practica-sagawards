{"ast":null,"code":"import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../assets/styles/Register.css';\nfunction Register() {\n  // ... existing state variables ...\n\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:3000/api/auth/register', {\n        username,\n        password,\n        firstName,\n        lastName,\n        phoneNumber,\n        dateOfBirth,\n        email\n      });\n      setMessage(response.data.message);\n\n      // Optionally navigate to login or dashboard\n      // navigate('/login');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Registration error:', error.response ? error.response.data : error.message);\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed');\n    }\n  };\n\n  // ... rest of the component remains the same ...\n}\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","Link","axios","Register","handleRegister","e","preventDefault","password","confirmPassword","setMessage","response","post","username","firstName","lastName","phoneNumber","dateOfBirth","email","data","message","error","_error$response","_error$response$data","console","_c","$RefreshReg$"],"sources":["D:/IASMINA/Practica/Site2/react_site2.2/sagawards/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../assets/styles/Register.css';\r\n\r\nfunction Register() {\r\n  // ... existing state variables ...\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost:3000/api/auth/register', {\r\n        username,\r\n        password,\r\n        firstName,\r\n        lastName,\r\n        phoneNumber,\r\n        dateOfBirth,\r\n        email,\r\n      });\r\n\r\n      setMessage(response.data.message);\r\n      \r\n      // Optionally navigate to login or dashboard\r\n      // navigate('/login');\r\n    } catch (error) {\r\n      console.error('Registration error:', error.response ? error.response.data : error.message);\r\n      setMessage(error.response?.data?.message || 'Registration failed');\r\n    }\r\n  };\r\n\r\n  // ... rest of the component remains the same ...\r\n}\r\n\r\nexport default Register;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,+BAA+B;AAEtC,SAASC,QAAQA,CAAA,EAAG;EAClB;;EAEA,MAAMC,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIC,QAAQ,KAAKC,eAAe,EAAE;MAChCC,UAAU,CAAC,wBAAwB,CAAC;MACpC;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,yCAAyC,EAAE;QAC3EC,QAAQ;QACRL,QAAQ;QACRM,SAAS;QACTC,QAAQ;QACRC,WAAW;QACXC,WAAW;QACXC;MACF,CAAC,CAAC;MAEFR,UAAU,CAACC,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC;;MAEjC;MACA;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACH,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACV,QAAQ,GAAGU,KAAK,CAACV,QAAQ,CAACQ,IAAI,GAAGE,KAAK,CAACD,OAAO,CAAC;MAC1FV,UAAU,CAAC,EAAAY,eAAA,GAAAD,KAAK,CAACV,QAAQ,cAAAW,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBH,IAAI,cAAAI,oBAAA,uBAApBA,oBAAA,CAAsBH,OAAO,KAAI,qBAAqB,CAAC;IACpE;EACF,CAAC;;EAED;AACF;AAACK,EAAA,GAhCQrB,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}