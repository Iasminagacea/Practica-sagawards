{"ast":null,"code":"var _jsxFileName = \"D:\\\\IASMINA\\\\Practica\\\\Site2\\\\react_site2.2\\\\sagawards\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport '../assets/styles/Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const navigate = useNavigate();\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await fetch('/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // Add this line\n        body: JSON.stringify({\n          username,\n          password,\n          firstName,\n          lastName,\n          phoneNumber,\n          dateOfBirth,\n          email\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(data.message);\n        navigate('/login'); // Optional: redirect to login\n      } else {\n        setMessage(data.message || 'Registration failed');\n      }\n    } catch (error) {\n      setMessage('Network error: ' + error.message);\n    }\n  };\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n  const toggleShowConfirmPassword = () => {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleRegister,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"First Name\",\n              required: true,\n              value: firstName,\n              onChange: e => setFirstName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bx bxs-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-link\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn home-btn\",\n          onClick: () => navigate('/'),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\\\\Images\\\\home_logo.png\",\n            alt: \"Home Logo\",\n            className: \"home-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"6Qsg/Jq4xvLUbC5gT4nbnY+q0DU=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","Link","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","phoneNumber","setPhoneNumber","dateOfBirth","setDateOfBirth","email","setEmail","message","setMessage","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","navigate","handleRegister","e","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","data","json","ok","error","toggleShowPassword","toggleShowConfirmPassword","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","value","onChange","target","to","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/IASMINA/Practica/Site2/react_site2.2/sagawards/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport '../assets/styles/Register.css';\r\n\r\nfunction Register() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [dateOfBirth, setDateOfBirth] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch('/api/auth/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include', // Add this line\r\n        body: JSON.stringify({\r\n          username,\r\n          password,\r\n          firstName,\r\n          lastName,\r\n          phoneNumber,\r\n          dateOfBirth,\r\n          email,\r\n        })\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setMessage(data.message);\r\n        navigate('/login'); // Optional: redirect to login\r\n      } else {\r\n        setMessage(data.message || 'Registration failed');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Network error: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const toggleShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const toggleShowConfirmPassword = () => {\r\n    setShowConfirmPassword(!showConfirmPassword);\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-wrapper\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"register-box\">\r\n          <form onSubmit={handleRegister}>\r\n            <h1>Sign up</h1>\r\n            <div className=\"input-box\">\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"First Name\" \r\n                required \r\n                value={firstName} \r\n                onChange={(e) => setFirstName(e.target.value)} \r\n              />\r\n              <i className='bx bxs-user'></i>\r\n            </div>\r\n            {/* Rest of the original code remains the same */}\r\n            <button type=\"submit\" className=\"btn\">Sign up</button>\r\n            <div className=\"register-link\">\r\n              <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n            </div>\r\n            {message && <p>{message}</p>}\r\n          </form>\r\n          <button className=\"btn home-btn\" onClick={() => navigate('/')}>\r\n            <img src=\"\\Images\\home_logo.png\" alt=\"Home Logo\" className=\"home-logo\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC2B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM6B,QAAQ,GAAG5B,WAAW,CAAC,CAAC;EAE9B,MAAM6B,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIvB,QAAQ,KAAKE,eAAe,EAAE;MAChCa,UAAU,CAAC,wBAAwB,CAAC;MACpC;IACF;IACA,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;QACjDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,WAAW,EAAE,SAAS;QAAE;QACxBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjC,QAAQ;UACRE,QAAQ;UACRI,SAAS;UACTE,QAAQ;UACRE,WAAW;UACXE,WAAW;UACXE;QACF,CAAC;MACH,CAAC,CAAC;MACF,MAAMoB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;QACfnB,UAAU,CAACiB,IAAI,CAAClB,OAAO,CAAC;QACxBM,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACtB,CAAC,MAAM;QACLL,UAAU,CAACiB,IAAI,CAAClB,OAAO,IAAI,qBAAqB,CAAC;MACnD;IACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdpB,UAAU,CAAC,iBAAiB,GAAGoB,KAAK,CAACrB,OAAO,CAAC;IAC/C;EACF,CAAC;EAED,MAAMsB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BnB,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAMqB,yBAAyB,GAAGA,CAAA,KAAM;IACtClB,sBAAsB,CAAC,CAACD,mBAAmB,CAAC;EAC9C,CAAC;EAED,oBACEvB,OAAA;IAAK2C,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/B5C,OAAA;MAAK2C,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtB5C,OAAA;QAAK2C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B5C,OAAA;UAAM6C,QAAQ,EAAEnB,cAAe;UAAAkB,QAAA,gBAC7B5C,OAAA;YAAA4C,QAAA,EAAI;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBjD,OAAA;YAAK2C,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB5C,OAAA;cACEkD,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,YAAY;cACxBC,QAAQ;cACRC,KAAK,EAAE5C,SAAU;cACjB6C,QAAQ,EAAG3B,CAAC,IAAKjB,YAAY,CAACiB,CAAC,CAAC4B,MAAM,CAACF,KAAK;YAAE;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,eACFjD,OAAA;cAAG2C,SAAS,EAAC;YAAa;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eAENjD,OAAA;YAAQkD,IAAI,EAAC,QAAQ;YAACP,SAAS,EAAC,KAAK;YAAAC,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtDjD,OAAA;YAAK2C,SAAS,EAAC,eAAe;YAAAC,QAAA,eAC5B5C,OAAA;cAAA4C,QAAA,GAAG,2BAAyB,eAAA5C,OAAA,CAACF,IAAI;gBAAC0D,EAAE,EAAC,QAAQ;gBAAAZ,QAAA,EAAC;cAAK;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D,CAAC,EACL9B,OAAO,iBAAInB,OAAA;YAAA4C,QAAA,EAAIzB;UAAO;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACPjD,OAAA;UAAQ2C,SAAS,EAAC,cAAc;UAACc,OAAO,EAAEA,CAAA,KAAMhC,QAAQ,CAAC,GAAG,CAAE;UAAAmB,QAAA,eAC5D5C,OAAA;YAAK0D,GAAG,EAAC,yBAAuB;YAACC,GAAG,EAAC,WAAW;YAAChB,SAAS,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/C,EAAA,CAvFQD,QAAQ;EAAA,QAYEJ,WAAW;AAAA;AAAA+D,EAAA,GAZrB3D,QAAQ;AAyFjB,eAAeA,QAAQ;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}